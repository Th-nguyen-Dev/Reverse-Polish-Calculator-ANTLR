plugins {
    id 'java'
    id 'antlr'
    id 'application'
}
repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.13.1' // Use ANTLR version 4
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'


}

generateGrammarSource {
    arguments += ["-visitor", "-no-listener"]
    outputDirectory = file("src/main/antlr")
}
build {
    dependsOn generateGrammarSource
}
sourceSets {
    main {

        java {
            srcDirs = ['src/main']
        }
        antlr {
            srcDirs = ['src/main/antlr']
        }
    }
    test{
        java {
            srcDirs = ['src/test']
        }

    }
}
application {
    // Replace 'com.example.MainClass' with the fully qualified name of your main class
    mainClassName = 'main.java.Main'
}
jar {
    manifest {
        attributes(
                'Main-Class': 'main.java.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test{
    useJUnitPlatform()
}




